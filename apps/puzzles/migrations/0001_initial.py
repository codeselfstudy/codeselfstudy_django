# Generated by Django 3.1.3 on 2020-11-21 11:06

import codeselfstudy.helpers.utils
from django.db import migrations, models
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Puzzle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('source', models.CharField(choices=[('Codewars', 'Codewars'), ('Leetcode', 'Leetcode'), ('Project Euler', 'Project Euler'), ('Code Self Study', 'Code Self Study'), ('Unknown', 'Unknown')], default='Unknown', max_length=100)),
                ('difficulty', models.IntegerField(choices=[(0, 'Unknown'), (1, 'One'), (2, 'Two'), (3, 'Three'), (4, 'Four'), (5, 'Five'), (6, 'Six'), (7, 'Seven'), (8, 'Eight'), (9, 'Nine'), (10, 'Ten')], default=0)),
                ('unsafe_description', models.TextField()),
                ('cooked_description', models.TextField(help_text='The description of the puzzle')),
                ('slug', models.SlugField(default=codeselfstudy.helpers.utils.create_random_slug, max_length=255)),
                ('original_url', models.URLField(blank=True, help_text='If the puzzle originated somewhere else, put the full URL here', null=True)),
                ('original_raw_data', models.JSONField(blank=True, help_text='Any Python data type here will be turned into JSONB.', null=True)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
